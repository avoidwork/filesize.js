/**
 * filesize
 *
 * @author Jason Mulligan <jason.mulligan@avoidwork.com>
 * @copyright 2013 Jason Mulligan
 * @license BSD-3 <https://raw.github.com/avoidwork/filesize.js/master/LICENSE>
 * @link http://filesizejs.com
 * @module filesize
 * @version 1.9.2
 */
(function(e){"use strict";function filesize(e){var a,u,l,m,f,b,B,d,c,g="",p=!0,h=!1;if(void 0!==arguments[3]?(m=arguments[1],f=arguments[2],p=arguments[3]):("boolean"==typeof arguments[1]?f=arguments[1]:m=arguments[1],"boolean"==typeof arguments[2]&&(p=arguments[2])),isNaN(e)||void 0!==m&&isNaN(m))throw Error("Invalid arguments");if(f=f===!0,p=p===!0,m=f?1:void 0===m?2:parseInt(m,t),l=Number(e),u=0>l,u&&(l=-l),0===l)g=Number(0).toFixed(0)+"B";else for(p?(B=o.all.increments,a=o.all.nth):(B=o.bitless.increments,a=o.bitless.nth);a--;)if(b=B[a][1],d=B[a][0],l>=b){s.test(d)&&(h=!0,m=0),g=(l/b).toFixed(m),!h&&f&&(p&&r.test(d)&&(d=d.toLowerCase()),d=d.charAt(0),c=n.exec(g),null!==c&&void 0!==c[1]&&i.test(c[1])&&(g=parseInt(g,t))),g+=d;break}return u&&(g="-"+g),g}var t=10,n=/\.(.*)/,r=/b$/,s=/^B$/,i=/^0$/,o={all:{increments:[["B",1],["Kb",128],["KB",1024],["Mb",131072],["MB",1049e3],["Gb",1342e5],["GB",1074e6],["Tb",1374e8],["TB",11e11],["Pb",1407e11],["PB",1126e12]],nth:11},bitless:{increments:[["B",1],["KB",1024],["MB",1049e3],["GB",1074e6],["TB",11e11],["PB",1126e12]],nth:6}};"undefined"!=typeof exports?module.exports=filesize:"function"==typeof define?define(function(){return filesize}):e.filesize=filesize})(this);