/**
 * filesize
 *
 * @author Jason Mulligan <jason.mulligan@avoidwork.com>
 * @copyright 2013 Jason Mulligan
 * @license BSD-3 <https://raw.github.com/avoidwork/filesize.js/master/LICENSE>
 * @link http://filesizejs.com
 * @module filesize
 * @version 1.9.3
 */
(function(e){"use strict";function filesize(e){var o,u,l,f,m,B,b,c,d,g="",p=!0,h=!1;if(void 0!==arguments[3]?(f=arguments[1],m=arguments[2],p=arguments[3]):("boolean"==typeof arguments[1]?m=arguments[1]:f=arguments[1],"boolean"==typeof arguments[2]&&(p=arguments[2])),isNaN(e)||void 0!==f&&isNaN(f))throw Error("Invalid arguments");if(m=m===!0,p=p===!0,f=m?1:void 0===f?2:parseInt(f,t),l=Number(e),u=0>l,u&&(l=-l),0===l)g="0B";else for(p?(b=a.all.increments,o=a.all.nth):(b=a.bitless.increments,o=a.bitless.nth);o--;)if(B=b[o][1],c=b[o][0],l>=B){r.test(c)&&(h=!0,f=0),g=(l/B).toFixed(f),!h&&m&&(p&&s.test(c)&&(c=c.toLowerCase()),c=c.charAt(0),d=n.exec(g),null!==d&&void 0!==d[1]&&i.test(d[1])&&(g=parseInt(g,t))),g+=c;break}return u&&(g="-"+g),g}var t=10,n=/\.(.*)/,s=/b$/,r=/^B$/,i=/^0$/,a={all:{increments:[["B",1],["Kb",128],["KB",1024],["Mb",131072],["MB",1049e3],["Gb",1342e5],["GB",1074e6],["Tb",1374e8],["TB",11e11],["Pb",1407e11],["PB",1126e12]],nth:11},bitless:{increments:[["B",1],["KB",1024],["MB",1049e3],["GB",1074e6],["TB",11e11],["PB",1126e12]],nth:6}};"undefined"!=typeof exports?module.exports=filesize:"function"==typeof define?define(function(){return filesize}):e.filesize=filesize})(this);