/**
 * filesize
 *
 * @author Jason Mulligan <jason.mulligan@avoidwork.com>
 * @copyright 2013 Jason Mulligan
 * @license BSD-3 <https://raw.github.com/avoidwork/filesize.js/master/LICENSE>
 * @link http://filesizejs.com
 * @module filesize
 * @version 1.9.0
 */
(function(e){"use strict";function filesize(e){var o,a,u,l,m,f,b,B,d,c="",g=!0;if(void 0!==arguments[3]?(l=arguments[1],m=arguments[2],g=arguments[3]):("boolean"==typeof arguments[1]?m=arguments[1]:l=arguments[1],"boolean"==typeof arguments[2]&&(g=arguments[2])),isNaN(e)||void 0!==l&&isNaN(l))throw Error("Invalid arguments");if(m=m===!0,g=g===!0,l=m?1:void 0===l?2:parseInt(l,t),u=Number(e),a=0>u,a&&(u=-u),0===u)m&&(l=0),c=Number(0).toFixed(l)+"B";else for(g?(b=i.all.increments,o=i.all.nth):(b=i.bitless.increments,o=i.bitless.nth);o--;)if(f=b[o][1],B=b[o][0],u>=f){c=(u/f).toFixed(l),m&&(g&&r.test(B)&&(B=B.toLowerCase()),B=B.charAt(0),d=n.exec(c),null!==d&&void 0!==d[1]&&s.test(d[1])&&(c=parseInt(c,t))),c+=B;break}return a&&(c="-"+c),c}var t=10,n=/\.(.*)/,r=/b$/,s=/^0$/,i={all:{increments:[["B",1],["Kb",128],["KB",1024],["Mb",131072],["MB",1049e3],["Gb",1342e5],["GB",1074e6],["Tb",1374e8],["TB",11e11],["Pb",1407e11],["PB",1126e12]],nth:11},bitless:{increments:[["B",1],["KB",1024],["MB",1049e3],["GB",1074e6],["TB",11e11],["PB",1126e12]],nth:6}};"undefined"!=typeof exports?module.exports=filesize:"function"==typeof define?define(function(){return filesize}):e.filesize=filesize})(this);