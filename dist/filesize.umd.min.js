/*!
 2025 Jason Mulligan <jason.mulligan@avoidwork.com>
 @version 11.0.6
*/
!function(t,i){"object"==typeof exports&&"undefined"!=typeof module?i(exports):"function"==typeof define&&define.amd?define(["exports"],i):i((t="undefined"!=typeof globalThis?globalThis:t||self).filesize={})}(this,function(t){"use strict";const i="jedec",e="bits",o="bytes",n="string",r="round",s="",l={symbol:{iec:{bits:["bit","Kibit","Mibit","Gibit","Tibit","Pibit","Eibit","Zibit","Yibit"],bytes:["B","KiB","MiB","GiB","TiB","PiB","EiB","ZiB","YiB"]},jedec:{bits:["bit","Kbit","Mbit","Gbit","Tbit","Pbit","Ebit","Zbit","Ybit"],bytes:["B","KB","MB","GB","TB","PB","EB","ZB","YB"]}},fullform:{iec:["","kibi","mebi","gibi","tebi","pebi","exbi","zebi","yobi"],jedec:["","kilo","mega","giga","tera","peta","exa","zetta","yotta"]}};function a(t,{bits:a=!1,pad:b=!1,base:p=-1,round:f=2,locale:u="",localeOptions:c={},separator:d="",spacer:g=" ",symbols:m={},standard:h="",output:y=n,fullform:B=!1,fullforms:M=[],exponent:x=-1,roundingMethod:w=r,precision:T=0}={}){let E=x,j=Number(t),P=[],N=0,S=s;"si"===h?(p=10,h=i):"iec"===h||h===i?p=2:2===p?h="iec":(p=10,h=i);const k=10===p?1e3:1024,z=!0===B,G=j<0,K=Math[w];if("bigint"!=typeof t&&isNaN(t))throw new TypeError("Invalid number");if("function"!=typeof K)throw new TypeError("Invalid rounding method");if(G&&(j=-j),(-1===E||isNaN(E))&&(E=Math.floor(Math.log(j)/Math.log(k)),E<0&&(E=0)),E>8&&(T>0&&(T+=8-E),E=8),"exponent"===y)return E;if(0===j)P[0]=0,T>0&&(P[0]=P[0].toPrecision(T)),S=P[1]=l.symbol[h][a?e:o][E];else{let t=2===p?Math.pow(2,10*E):Math.pow(1e3,E);N=j/t,a&&(N*=8,N>=k&&E<8&&(N/=k,E++));let i=Math.pow(10,E>0?f:0);P[0]=K(N*i)/i,P[0]===k&&E<8&&-1===x&&(P[0]=1,E++),T>0&&(P[0]=P[0].toPrecision(T),P[0].includes("e")&&(E++,t=2===p?Math.pow(2,10*E):Math.pow(1e3,E),N=j/t,P[0]=K(N*i)/i)),S=P[1]=10===p&&1===E?a?"kbit":"kB":l.symbol[h][a?e:o][E]}if(G&&(P[0]=-P[0]),P[1]=m[P[1]]||P[1],!0===u?P[0]=P[0].toLocaleString():u.length>0?P[0]=P[0].toLocaleString(u,c):d.length>0&&(P[0]=P[0].toString().replace(".",d)),b&&f>0){const t=P[0].toString(),i=d||(t.match(/(\D)/g)||[]).pop()||".",e=t.toString().split(i),o=e[1]||s,n=o.length,r=f-n;P[0]=`${e[0]}${i}${o.padEnd(n+r,"0")}`}return z&&(P[1]=M[E]?M[E]:l.fullform[h][E]+(a?"bit":"byte")+(1===P[0]?s:"s")),"array"===y?P:"object"===y?{value:P[0],symbol:P[1],exponent:E,unit:S}:P.join(g)}t.filesize=a,t.partial=function({bits:t=!1,pad:i=!1,base:e=-1,round:o=2,locale:s="",localeOptions:l={},separator:b="",spacer:p=" ",symbols:f={},standard:u="",output:c=n,fullform:d=!1,fullforms:g=[],exponent:m=-1,roundingMethod:h=r,precision:y=0}={}){return n=>a(n,{bits:t,pad:i,base:e,round:o,locale:s,localeOptions:l,separator:b,spacer:p,symbols:f,standard:u,output:c,fullform:d,fullforms:g,exponent:m,roundingMethod:h,precision:y})}});//# sourceMappingURL=filesize.umd.min.js.map
